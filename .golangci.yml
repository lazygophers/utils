# golangci-lint configuration for LazyGophers Utils
# https://golangci-lint.run/usage/configuration/

version: 2

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  build-tags:
    - integration
    - e2e
  skip-dirs:
    - vendor
    - node_modules
    - .git
    - tmp
    - temp
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"
    - ".*_generated\\.go$"
  allow-parallel-runners: true

output:
  color: always
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  govet:
    check-shadowing: true
    enable-all: true
    disable:
      - fieldalignment
  
  gocyclo:
    min-complexity: 25
  
  cyclop:
    max-complexity: 25
    package-average: 15.0
    skip-tests: true
  
  dupl:
    threshold: 200
  
  funlen:
    lines: 200
    statements: 150
  
  gocognit:
    min-complexity: 25
  
  goconst:
    min-len: 4
    min-occurrences: 4
    ignore-tests: true
    match-constant: true
    numbers: false
  
  lll:
    line-length: 150
    tab-width: 4
  
  misspell:
    locale: US
  
  unused:
    field-writes-are-uses: true
    exported-is-used: true
    exported-fields-are-used: true
    parameters-are-used: true
    local-variables-are-used: true
    generated-is-used: true
  
  errcheck:
    check-type-assertions: false
    check-blank: false
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)
  
  gosec:
    includes:
      - G101
      - G102
      - G103
      - G104
      - G106
      - G107
      - G108
      - G109
      - G110
      - G201
      - G202
      - G203
      - G204
      - G301
      - G302
      - G303
      - G304
      - G305
      - G306
      - G307
      - G401
      - G402
      - G403
      - G404
      - G501
      - G502
      - G503
      - G504
      - G505
      - G601
    excludes:
      - G204
      - G304

linters:
  disable-all: false
  disable:
    - errcheck
    - govet
    - ineffassign
    - staticcheck
    - unused
    - cyclop
    - dupl
    - funlen
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocyclo
    - godot
    - gosec
    - ireturn
    - lll
    - nakedret
    - nestif
    - nonamedreturns
    - testpackage
    - tparallel
    - unparam
  enable:
    # Quality linters - essential only
    - bodyclose
    - contextcheck
    - durationcheck
    - errname
    - nilerr
    - nilnil
    - nolintlint
    - rowserrcheck
    - sqlclosecheck
    
    # Style linters - critical only
    - asciicheck
    - bidichk
    - grouper
    - importas
    - usestdlibvars

issues:
  exclude:
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
    - "Error return value of .* is not checked"
    - "should have a package comment, unless it's in another file for this package"
    - "comment on exported type .* should be of the form"
    - "comment on exported const .* should be of the form"
    - "comment on exported var .* should be of the form"
    - "comment on exported function .* should be of the form"
    - "package comment should be of the form"
    - "exported .* should have comment or be unexported"
    - "ST1000: at least one file in a package should have a package comment"
    - "SA1019:.*deprecated"
    - "SA6003: should range over string, not"
    - "SA4011: ineffective break statement"
    - "S1002: should omit comparison to bool constant"
    - "ST1017: don't use Yoda conditions"
  
  exclude-rules:
    # Test files - be more lenient
    - path: _test\.go
      linters:
        - errcheck
        - govet
        - gocritic
        - unused
        - staticcheck
        - ineffassign
        - makezero
        - wastedassign
        - errorlint
        - misspell
        - unconvert
        - whitespace
        
    # Platform-specific test files
    - path: .*_darwin_test\.go
      linters:
        - all
        
    # 100% coverage test files - disable most linters
    - path: .*_100_coverage_test\.go
      linters:
        - all
        
    # Example files
    - path: example_.*\.go
      linters:
        - errcheck
        
    # Benchmark files
    - path: .*_bench.*\.go
      linters:
        - errcheck
        - gocritic
        
    # Generated files
    - path: .*\.pb\.go
      linters:
        - all
        
    - path: vendor/
      linters:
        - all
        
    # Type conversion utilities - allow complex functions
    - path: candy/to_.*\.go
      linters:
        - gocritic
        
    # String utilities
    - path: stringx/.*\.go
      linters:
        - gocritic
        
    # Time utilities - allow constants
    - path: xtime/.*\.go
      linters:
        - gocritic
        - unused
        
    # Config loading - allow complexity for parsing
    - path: config/load\.go
      linters:
        - gocritic
        - errcheck
        
    # Crypto test files - allow test constants
    - path: cryptox/.*_test\.go
      linters:
        - unused
        - gocritic
        
    # Random utilities
    - path: randx/.*\.go
      linters:
        - unused
        - gocritic
        
    # Hystrix - internal utilities
    - path: hystrix/.*\.go
      linters:
        - unused
        - gocritic
        
    # App info utilities
    - path: app/.*\.go
      linters:
        - unused
        
    - text: "G204: Subprocess launched with"
      linters:
        - gosec
      path: (cmd|tools)/.*\.go
      
    - text: "G304: Potential file inclusion via variable"
      linters:
        - gosec
      path: (config|file)/.*\.go
      
    - text: "ineffectual assignment to err"
      linters:
        - ineffassign
        
    - text: "main is unused"
      linters:
        - unused
        
    - text: "line is \\d+ characters"
      linters:
        - lll
      source: "(http://|https://|import \\()"
      
    # Allow unused parameters in utility functions (might be for interface compliance)
    - text: "- result .* is never used"
      linters:
        - unparam
        
    # Allow unused variables in test helper functions
    - text: "is unused"
      linters:
        - unused
      path: .*_test\.go
      
    # Allow unnecessary conversions in type assertion heavy code
    - text: "unnecessary conversion"
      linters:
        - unconvert
      path: (candy|stringx)/.*\.go
      
    # Allow assignment without using value in performance critical code  
    - text: "assigned to .*, but reassigned without using the value"
      linters:
        - wastedassign
      path: (xtime|crypto)/.*\.go
      
    # Allow trailing newlines in certain contexts
    - text: "unnecessary trailing newline"
      linters:
        - whitespace
      
    # Allow leading newlines in certain contexts
    - text: "unnecessary leading newline"
      linters:
        - whitespace
      
    # Disable specific gocritic rules that are too strict for utility code
    - text: "unlambda:"
      linters:
        - gocritic
      
    - text: "appendAssign:"
      linters:
        - gocritic
        
    - text: "assignOp:"
      linters:
        - gocritic
        
    - text: "ifElseChain:"
      linters:
        - gocritic
        
    - text: "commentFormatting:"
      linters:
        - gocritic
        
    - text: "elseif:"
      linters:
        - gocritic
        
    # Allow deprecated code in test files (testing legacy functionality)
    - text: "SA1019:"
      linters:
        - staticcheck
      path: .*_test\.go
      
    # Allow some deprecated usage in specific packages
    - text: "SA1019:.*deprecated"
      linters:
        - staticcheck
      path: (pgp|stringx)/.*\.go
  
  max-issues-per-linter: 0  # Show all issues
  max-same-issues: 0       # Show all similar issues  
  new: false
  fix: false

severity:
  default-severity: error
  case-sensitive: false